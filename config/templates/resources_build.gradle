plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'org.minecraftplus.gradle.assetator' version '0.1.0'
}

import org.minecraftplus.gradle.tasks.Utils

Utils.init() // Initialize special gradle utils

ext {
    CONFIG = rootProject.ext.CONFIG // Load and use config from root project
    DIST_CONFIG = Utils.distributionConfig(CONFIG, project.name)

    INDEX_ID = DIST_CONFIG.index

    PATH_BUILD = file('build').absolutePath + '/'
    PATH_BUILD_ASSETS = PATH_BUILD + 'assets/'
}

sourceSets {
    remote {
        resources.srcDirs = ['src/main/remote']
    }
    internal {
        resources.srcDirs = ['src/main/internal']
    }
    shared {
        resources {
            srcDirs = ['src/main/internal']

            // Resources shared between client and server
            include "assets/.mcassetsroot"
            include "data/**"
            include "log4j2.xml"
            include "pack.mcmeta"
            include "version.json"
        }
    }
    client {
        resources {
            srcDirs = ['src/main/internal']
            setIncludes shared.resources.getIncludes()

            // Resources special to client
            include "assets/**"
            include "pack.png"
        }
    }
    server {
        resources {
            srcDirs = ['src/main/internal']
            setIncludes shared.resources.getIncludes()

            // Resources special to server
            include "assets/minecraft/lang/en_us.json"
            include "Log4j-config.xsd"
            include "Log4j-events.dtd"
            include "Log4j-events.xsd"
            include "Log4j-levels.xsd"
        }
    }
}

assets {
    generate {
        input = sourceSets.remote.resources.srcDirs as File[]
        output = file(PATH_BUILD_ASSETS + 'indexes/' + INDEX_ID + '.json')
        objectsDir = file(PATH_BUILD_ASSETS + 'objects/')
    }
}
