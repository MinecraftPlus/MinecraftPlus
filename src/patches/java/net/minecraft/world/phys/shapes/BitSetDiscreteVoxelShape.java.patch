--- a/net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape.java
+++ b/net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape.java
@@ -109,9 +109,9 @@
          boolean[] az = new boolean[]{false};
          boolean flag = indexmerger1.forMergedIndexes((i3, i4, i5) -> {
             boolean[] az1 = new boolean[]{false};
-            boolean flag = indexmerger2.forMergedIndexes((i6, i7, i8) -> {
-               boolean flag = booleanop.apply(discretevoxelshape.isFullWide(i, i3, i6), discretevoxelshape1.isFullWide(i1, i4, i7));
-               if (flag) {
+            boolean flag1 = indexmerger2.forMergedIndexes((i6, i7, i8) -> {
+               boolean flag2 = booleanop.apply(discretevoxelshape.isFullWide(i, i3, i6), discretevoxelshape1.isFullWide(i1, i4, i7));
+               if (flag2) {
                   bitsetdiscretevoxelshape.storage.set(bitsetdiscretevoxelshape.getIndex(i2, i5, i8));
                   ai[2] = Math.min(ai[2], i8);
                   ai[5] = Math.max(ai[5], i8);
@@ -126,7 +126,7 @@
                az[0] = true;
             }
 
-            return flag;
+            return flag1;
          });
          if (az[0]) {
             ai[0] = Math.min(ai[0], i2);
