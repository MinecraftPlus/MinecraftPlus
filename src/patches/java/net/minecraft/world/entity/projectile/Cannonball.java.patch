--- /dev/null
+++ b/net/minecraft/world/entity/projectile/Cannonball.java
@@ -0,0 +1,105 @@
+package net.minecraft.world.entity.projectile;
+
+import net.minecraft.world.entity.Entity;
+import net.minecraft.world.entity.EntityType;
+import net.minecraft.world.entity.LivingEntity;
+import net.minecraft.world.entity.vehicle.Cannon;
+import net.minecraft.world.item.Item;
+import net.minecraft.world.item.Items;
+import net.minecraft.world.damagesource.DamageSource;
+import net.minecraft.world.phys.EntityHitResult;
+import net.minecraft.world.phys.HitResult;
+import net.minecraft.world.level.Explosion;
+import net.minecraft.world.level.GameRules;
+import net.minecraft.world.level.Level;
+
+public class Cannonball extends ThrowableItemProjectile implements ItemSupplier
+{
+    private Type type = Type.IMPACT;
+    private float explosionPower = 0.0F;
+
+    public Cannonball(EntityType<? extends Cannonball> p_i50159_1_, Level p_i50159_2_) {
+        super(p_i50159_1_, p_i50159_2_);
+    }
+
+    public Cannonball(Level p_i1774_1_, LivingEntity p_i1774_2_) {
+        super(EntityType.CANNONBALL, p_i1774_2_, p_i1774_1_);
+    }
+
+    public Cannonball(Level p_i1775_1_, double p_i1775_2_, double p_i1775_4_, double p_i1775_6_) {
+        super(EntityType.CANNONBALL, p_i1775_2_, p_i1775_4_, p_i1775_6_, p_i1775_1_);
+    }
+
+    public Cannonball(Level level, Cannon cannon, LivingEntity gunner, Cannonball.Type type) {
+        this(level, cannon.getX(), cannon.getEyeY() - (double)0.1F, cannon.getZ());
+        this.type = type;
+        this.explosionPower = type.getExplosionPower();
+        this.setOwner(gunner);
+    }
+
+    @Override
+    protected Item getDefaultItem() {
+        return Items.CANNONBALL;
+    }
+
+    public Type getCannonballType() {
+        return this.type;
+    }
+
+    public float getExplosionPower() {
+        return this.explosionPower > 0.0F ? this.explosionPower : this.type.getExplosionPower();
+    }
+
+    public void setExplosionPower(float power) {
+        this.explosionPower = power;
+    }
+
+    @Override
+    protected float getGravity() {
+        return 0.055F;
+    }
+
+    @Override
+    protected float getAirSlowdown() {
+        return 0.0125F;
+    }
+
+    @Override
+    protected float getWaterSlowdown() {
+        return 0.025F;
+    }
+
+    /**
+     * Called when this Cannonball hits a block or entity.
+     */
+    @Override
+    protected void onHit(HitResult p_70227_1_) {
+        if (!this.level.isClientSide) {
+            if (p_70227_1_.getType() == HitResult.Type.ENTITY) {
+                Entity entity = ((EntityHitResult)p_70227_1_).getEntity();
+                entity.hurt(DamageSource.cannonball(this, this.owner), 6.0F);
+                this.doEnchantDamageEffects(this.owner, entity);
+            } else {
+                boolean flag = this.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING);
+                boolean incendiary = this.type == Cannonball.Type.INCENDIARY;
+                this.level.explode((Entity)null, this.getX(), this.getY(), this.getZ(), (float)this.explosionPower,
+                    incendiary, flag ? Explosion.BlockInteraction.DESTROY : Explosion.BlockInteraction.NONE);
+                this.remove();
+            }
+        }
+    }
+
+    public static enum Type {
+        IMPACT(2.5F), INCENDIARY(1.25F);
+
+        private final float explosionPower;
+
+        Type(float explosionPower) {
+            this.explosionPower = explosionPower;
+        }
+
+        float getExplosionPower() {
+            return this.explosionPower;
+        }
+    }
+}
