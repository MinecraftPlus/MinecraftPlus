--- /dev/null
+++ b/net/minecraft/world/inventory/CannonMenu.java
@@ -0,0 +1,112 @@
+package net.minecraft.world.inventory;
+
+import net.minecraft.world.Container;
+import net.minecraft.world.SimpleContainer;
+import net.minecraft.world.entity.player.Inventory;
+import net.minecraft.world.entity.player.Player;
+import net.minecraft.world.entity.vehicle.Cannon;
+import net.minecraft.world.item.ItemStack;
+import net.minecraft.world.item.Items;
+
+public class CannonMenu extends AbstractContainerMenu
+{
+    private final Container cannonContainer;
+    private final Cannon cannon;
+
+    public CannonMenu(int p_i50091_2_, Inventory p_i50091_3_) {
+        this(MenuType.CANNON, p_i50091_2_, p_i50091_3_, new SimpleContainer(2), null);
+    }
+
+    public CannonMenu(MenuType<?> menuType, int p_i50077_1_, Inventory p_i50077_2_, Container p_i50077_3_,
+        Cannon cannon) {
+        super(menuType, p_i50077_1_);
+        this.cannonContainer = p_i50077_3_;
+        this.cannon = cannon;
+
+        checkContainerSize(p_i50077_3_, 2);
+//        checkContainerDataCount(p_i50104_6_, 4);
+
+        p_i50077_3_.startOpen(p_i50077_2_.player);
+
+        // Cannon slots
+        this.addSlot(new Slot(p_i50077_3_, 0, 62, 20) {
+            @Override
+            public boolean mayPlace(ItemStack p_94041_2_) {
+                return p_94041_2_.getItem() == Items.GUNPOWDER;
+            }
+
+            @Override
+            public boolean mayPickup(Player p_82869_1_) {
+                return p_82869_1_.abilities.instabuild;
+            }
+        });
+        this.addSlot(new Slot(p_i50077_3_, 1, 98, 20) {
+            @Override
+            public int getMaxStackSize() {
+                return 1;
+            }
+
+            @Override
+            public boolean mayPlace(ItemStack p_94041_2_) {
+                return p_94041_2_.getItem() == Items.CANNONBALL;
+            }
+        });
+
+        // Player inventory slots
+        for (int i = 0; i < 3; ++i) {
+            for (int j = 0; j < 9; ++j) {
+                this.addSlot(new Slot(p_i50077_2_, j + i * 9 + 9, 8 + j * 18, 84 + i * 18));
+            }
+        }
+
+        for (int k = 0; k < 9; ++k) {
+            this.addSlot(new Slot(p_i50077_2_, k, 8 + k * 18, 142));
+        }
+
+    }
+
+    @Override
+    public void removed(Player p_75134_1_) {
+        super.removed(p_75134_1_);
+        this.cannonContainer.stopOpen(p_75134_1_);
+    }
+
+    @Override
+    public boolean stillValid(Player p_75145_1_) {
+        return this.cannonContainer.stillValid(p_75145_1_) && this.cannon.isAlive()
+            && this.cannon.distanceTo(p_75145_1_) < 8.0F;
+    }
+
+    @Override
+    public ItemStack quickMoveStack(Player p_82846_1_, int p_82846_2_) {
+        ItemStack itemstack = ItemStack.EMPTY;
+        Slot slot = this.slots.get(p_82846_2_);
+        if (slot != null && slot.hasItem()) {
+            ItemStack itemstack1 = slot.getItem();
+            itemstack = itemstack1.copy();
+            if (p_82846_2_ >= 2 && p_82846_2_ < 38) {
+                if (!this.moveItemStackTo(itemstack1, 0, 1, true)) {
+                    return ItemStack.EMPTY;
+                }
+            } else if (p_82846_2_ == 0 || p_82846_2_ == 1) {
+                if (!this.moveItemStackTo(itemstack1, 2, 38, true)) {
+                    return ItemStack.EMPTY;
+                }
+            }
+
+            if (itemstack1.isEmpty()) {
+                slot.set(ItemStack.EMPTY);
+            } else {
+                slot.setChanged();
+            }
+
+            if (itemstack1.getCount() == itemstack.getCount()) {
+                return ItemStack.EMPTY;
+            }
+
+            slot.onTake(p_82846_1_, itemstack1);
+        }
+
+        return itemstack;
+    }
+}
