--- a/net/minecraft/world/level/block/state/StateDefinition.java
+++ b/net/minecraft/world/level/block/state/StateDefinition.java
@@ -41,17 +41,17 @@
       }
 
       stream.forEach((list1) -> {
-         Map<Property<?>, Comparable<?>> map1 = MapFiller.linkedHashMapFrom(this.propertiesByName.values(), list1);
-         A abstractstateholder = factory.create(obj, ImmutableMap.copyOf(map1));
-         map1.put(map1, abstractstateholder);
+         Map<Property<?>, Comparable<?>> map2 = MapFiller.linkedHashMapFrom(this.propertiesByName.values(), list1);
+         A abstractstateholder = factory.create(obj, ImmutableMap.copyOf(map2));
+         map1.put(map2, abstractstateholder);
          list.add(abstractstateholder);
       });
 
       for(A abstractstateholder : list) {
-         abstractstateholder.populateNeighbours(map1);
+         abstractstateholder.populateNeighbours((Map<Map<Property<?>, Comparable<?>>, S>) map1);
       }
 
-      this.states = ImmutableList.copyOf(list);
+      this.states = (ImmutableList<S>) ImmutableList.copyOf(list);
    }
 
    public ImmutableList<S> getPossibleStates() {
