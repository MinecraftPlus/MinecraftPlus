--- a/net/minecraft/server/level/ChunkTaskPriorityQueue.java
+++ b/net/minecraft/server/level/ChunkTaskPriorityQueue.java
@@ -17,7 +17,7 @@
 public class ChunkTaskPriorityQueue<T> {
    public static final int PRIORITY_LEVEL_COUNT = ChunkMap.MAX_CHUNK_DISTANCE + 2;
    private final List<Long2ObjectLinkedOpenHashMap<List<Optional<T>>>> taskQueue = IntStream.range(0, PRIORITY_LEVEL_COUNT).mapToObj((ix) -> {
-      return new Long2ObjectLinkedOpenHashMap();
+      return new Long2ObjectLinkedOpenHashMap<List<Optional<T>>>();
    }).collect(Collectors.toList());
    private volatile int firstQueue = PRIORITY_LEVEL_COUNT;
    private final String name;
@@ -103,7 +103,7 @@
          }
 
          return list.stream().map((optional) -> {
-            return optional.map(Either::left).orElseGet(() -> {
+            return optional.<Either<T, Runnable>>map(Either::left).orElseGet(() -> {
                return Either.right(this.acquire(i1));
             });
          });
