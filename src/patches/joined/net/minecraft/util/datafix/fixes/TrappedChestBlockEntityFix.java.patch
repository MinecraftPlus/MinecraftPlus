--- a/net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix.java
+++ b/net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix.java
@@ -68,14 +68,14 @@
                      Dynamic<?> dynamic = typedx.get(DSL.remainderFinder());
                      int i2 = dynamic.get("xPos").asInt(0);
                      int i3 = dynamic.get("zPos").asInt(0);
-                     TaggedChoiceType<String> type = this.getInputSchema().findChoiceType(References.BLOCK_ENTITY);
-                     return typedx.updateTyped(opticfinder, (typed) -> {
-                        return typed.updateTyped(type.finder(), (typedx) -> {
-                           Dynamic<?> dynamic = typedx.getOrCreate(DSL.remainderFinder());
-                           int i2 = dynamic.get("x").asInt(0) - (i2 << 4);
-                           int i3 = dynamic.get("y").asInt(0);
-                           int i4 = dynamic.get("z").asInt(0) - (i3 << 4);
-                           return set.contains(LeavesFix.getIndex(i2, i3, i4)) ? typedx.update(type.finder(), (pair) -> {
+                     TaggedChoiceType<String> type7 = (TaggedChoiceType<String>) this.getInputSchema().findChoiceType(References.BLOCK_ENTITY);
+                     return typedx.updateTyped(opticfinder, (typed1) -> {
+                        return typed1.updateTyped(type7.finder(), (typedx1) -> {
+                           Dynamic<?> dynamic1 = typedx1.getOrCreate(DSL.remainderFinder());
+                           int x = dynamic1.get("x").asInt(0) - (i2 << 4);
+                           int y = dynamic1.get("y").asInt(0);
+                           int z = dynamic1.get("z").asInt(0) - (i3 << 4);
+                           return set.contains(LeavesFix.getIndex(x, y, z)) ? typedx1.update(type7.finder(), (pair) -> {
                               return pair.mapFirst((s) -> {
                                  if (!Objects.equals(s, "minecraft:chest")) {
                                     LOGGER.warn("Block Entity was expected to be a chest");
