--- a/net/minecraft/world/level/chunk/LevelChunk.java
+++ b/net/minecraft/world/level/chunk/LevelChunk.java
@@ -682,7 +682,7 @@
 
    public void unpackTicks() {
       if (this.blockTicks instanceof ProtoTickList) {
-         ((ProtoTickList)this.blockTicks).copyOut(this.level.getBlockTicks(), (blockpos) -> {
+         ((ProtoTickList<Block>)this.blockTicks).copyOut(this.level.getBlockTicks(), (blockpos) -> {
             return this.getBlockState(blockpos).getBlock();
          });
          this.blockTicks = EmptyTickList.empty();
@@ -692,7 +692,7 @@
       }
 
       if (this.liquidTicks instanceof ProtoTickList) {
-         ((ProtoTickList)this.liquidTicks).copyOut(this.level.getLiquidTicks(), (blockpos) -> {
+         ((ProtoTickList<Fluid>)this.liquidTicks).copyOut(this.level.getLiquidTicks(), (blockpos) -> {
             return this.getFluidState(blockpos).getType();
          });
          this.liquidTicks = EmptyTickList.empty();
@@ -704,12 +704,12 @@
    }
 
    public void packTicks(ServerLevel level) {
-      if (this.blockTicks == EmptyTickList.empty()) {
+      if (this.blockTicks == EmptyTickList.<Block>empty()) {
          this.blockTicks = new ChunkTickList<>(Registry.BLOCK::getKey, level.getBlockTicks().fetchTicksInChunk(this.chunkPos, true, false));
          this.setUnsaved(true);
       }
 
-      if (this.liquidTicks == EmptyTickList.empty()) {
+      if (this.liquidTicks == EmptyTickList.<Fluid>empty()) {
          this.liquidTicks = new ChunkTickList<>(Registry.FLUID::getKey, level.getLiquidTicks().fetchTicksInChunk(this.chunkPos, true, false));
          this.setUnsaved(true);
       }
